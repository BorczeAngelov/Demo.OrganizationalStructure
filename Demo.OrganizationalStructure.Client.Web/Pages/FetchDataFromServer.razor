@page "/fetchdatafromserver"

@using Demo.OrganizationalStructure.Client.Web.Services
@*@inject WeatherForecastService ForecastService*@
@inject OrgStructureService OrgStructureService

<h1>FetchDataFromServer</h1>

<p>This component demonstrates fetching data from a service.</p>

@if (OrgStructureService.Organisation == null)
{
    <button class="btn btn-primary" @onclick="ConnectToServer">Connect to SignalR Server</button>
}
else
{
    <p>JobRoles data</p>

    <table class="table">
        <thead>
            <tr>
                <th>EntityKey</th>
                <th>Name</th>
                <th>Description</th>
                <th>UpperHierarchyJobRoleKey</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var jobRole in OrgStructureService.Organisation.JobRoles)
            {
            <tr>
                <td>@jobRole.EntityKey</td>
                <td>@jobRole.Name</td>
                <td>@jobRole.Description</td>
                <td>@jobRole.UpperHierarchyJobRoleKey</td>
            </tr>
            }
        </tbody>
    </table>

    <p>Employees data</p>

    <table class="table">
        <thead>
            <tr>
                <th>EntityKey</th>
                <th>Name</th>
                <th>JobRoleEntityKey</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var employee in OrgStructureService.Organisation.Employees)
            {
                <tr>
                    <td>@employee.EntityKey</td>
                    <td>@employee.Name</td>
                    <td>@employee.JobRoleEntityKey</td>
                </tr>
            }
        </tbody>
    </table>
}

@code {
    private int currentCount = 0;

    protected override Task OnInitializedAsync()
    {
        return base.OnInitializedAsync();
    }


    private void IncrementCount()
    {
        currentCount++;
    }

    private async void ConnectToServer()
    {

        OrgStructureService.OrganisationLoaded += () =>
        {
            currentCount = OrgStructureService.Organisation.Employees.Count;
            this.StateHasChanged();
        };

        await OrgStructureService.ConnectWithServerAsync();
    }
}
